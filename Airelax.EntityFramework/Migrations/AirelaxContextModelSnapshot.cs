// <auto-generated />
using System;
using Airelax.EntityFramework.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Airelax.EntityFramework.Migrations
{
    [DbContext(typeof(AirelaxContext))]
    partial class AirelaxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airelax.Domain.Houses.BedroomDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<int>("BedType")
                        .HasColumnType("int");

                    b.Property<bool>("HasIndependentBath")
                        .HasColumnType("bit");

                    b.Property<int?>("SpaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("BedroomDetails");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateState")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("HouseType")
                        .HasColumnType("int");

                    b.Property<int>("RoomCategory")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HouseCategories");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseDescription", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GuestPermission")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("HouseHighlight")
                        .HasColumnType("int");

                    b.Property<string>("Others")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SpaceDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("HouseDescriptions");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseLocation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AddressDetail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LocationDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Town")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrafficDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("HouseLocations");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseRule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("AllowBaby")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowChild")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowParty")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPet")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSmoke")
                        .HasColumnType("bit");

                    b.Property<string>("Other")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("HouseRules");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("SpaceId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Policy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("CanRealTime")
                        .HasColumnType("bit");

                    b.Property<int>("CancelPolicy")
                        .HasColumnType("Money");

                    b.Property<decimal>("CashPledge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.ReservationRule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AvailableTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNight")
                        .HasColumnType("int");

                    b.Property<int>("MinNight")
                        .HasColumnType("int");

                    b.Property<int>("PrepareTime")
                        .HasColumnType("int");

                    b.Property<int>("RejectDate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReservationRules");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Space", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsShared")
                        .HasColumnType("bit");

                    b.Property<int>("SpaceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.BedroomDetail", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.Space", null)
                        .WithMany("BedroomDetail")
                        .HasForeignKey("SpaceId");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseCategory", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("HouseCategory")
                        .HasForeignKey("Airelax.Domain.Houses.HouseCategory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseDescription", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("HouseDescription")
                        .HasForeignKey("Airelax.Domain.Houses.HouseDescription", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseLocation", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("HouseLocation")
                        .HasForeignKey("Airelax.Domain.Houses.HouseLocation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.HouseRule", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("HouseRule")
                        .HasForeignKey("Airelax.Domain.Houses.HouseRule", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Photo", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithMany("Photos")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airelax.Domain.Houses.Space", null)
                        .WithMany("Photos")
                        .HasForeignKey("SpaceId")
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Policy", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("Policy")
                        .HasForeignKey("Airelax.Domain.Houses.Policy", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.ReservationRule", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithOne("ReservationRule")
                        .HasForeignKey("Airelax.Domain.Houses.ReservationRule", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Space", b =>
                {
                    b.HasOne("Airelax.Domain.Houses.House", null)
                        .WithMany("Spaces")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airelax.Domain.Houses.House", b =>
                {
                    b.Navigation("HouseCategory");

                    b.Navigation("HouseDescription");

                    b.Navigation("HouseLocation");

                    b.Navigation("HouseRule");

                    b.Navigation("Photos");

                    b.Navigation("Policy");

                    b.Navigation("ReservationRule");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("Airelax.Domain.Houses.Space", b =>
                {
                    b.Navigation("BedroomDetail");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
