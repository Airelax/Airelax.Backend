@using Microsoft.Extensions.Options
@using Airelax.Defines
@inject IOptions<PhotoUploadSetting> _photoUploadSetting
@{
    Layout = "~/Views/Shared/_Layout _memberInfo_bs5.cshtml";
}
<div class="container-xl">
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-action="Index" asp-route-memberId="">個人資料</a>
            </li>
            <li class="breadcrumb-item active">個人相片</li>
        </ol>
    </nav>
    <h2>
        個人資料相片
    </h2>
    <div class="card">
        <div class="card-header">個人相片</div>
        <div class="pic">
            <img src="~/dist/img/memberInfo/portrait.png" alt="">
            <div class="lds-spinner">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
        <div class="card-body">
            <p>提供清晰的臉部相片，能讓其他房東／體驗達人或房客／參加者對您有初步印象。 Airbnb要求所有房東／體驗達人都必須提供個人相片。 我們不會要求房客／參加者提供個人相片，但房東／體驗達人可以提出此要求。 但即使房東／體驗達人要求提供個人相片，也只會在預訂確認之後才會看到房客／參加者的相片。</p>
            <form action="post">
                <label for="person-icon" class="btn">上傳相片</label>
                <input type="file" name="files" accept="image/gif, image/jpeg, image/png" id="person-icon">
            </form>
        </div>
    </div>
</div>


@section topCSS{
    <link rel="stylesheet" href="~/css/memberInfo/EditPhoto.css">
}

@section endJS
{
    <script>
    const files = document.querySelector('#person-icon');
    const pic = document.querySelector('.pic');
    const loading = document.querySelector('.lds-spinner');
    const img = pic.querySelector('img');
    const url = '@Html.Raw(_photoUploadSetting.Value.BaseUrl)/@Html.Raw(_photoUploadSetting.Value.CloudName)/@Html.Raw(_photoUploadSetting.Value.UploadImageApi)';
    files.addEventListener('change', function () {
        img.classList.add('d-none');
        loading.classList.add('d-block');
        
        if (this.files && this.files[0]) {
            const formData = new FormData();
            formData.append("file", this.files[0]);
            formData.append("upload_preset", "dsojvh87");
            fetch(url, {
                method: 'POST',
                body: formData
            }).then(res => {
                return res.json();
            }).then(
                json => {
                    console.log(json);
                    loading.classList.remove('d-block');
                    img.src=json.secure_url;
                    img.classList.remove('d-none');                                              
                }).catch(err => console.log(err))
        }
    });
    </script>
}